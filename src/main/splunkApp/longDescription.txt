+ How To Use the AppDynamics App in Splunk

++ What is AppDynamics?
[http://www.appdynamics.com/ AppDynamics] is an application performance monitoring solution that helps you:
* Identify problems such as slow and stalled user requests and errors in a production environment.
* Troubleshoot and isolate the root cause of such problems by:
 * Mining performance data from AppDynamics into Splunk using the AppDynamics Controller REST API. See Seeing Performance Data from AppDynamics in Splunk.
 * Pushing notifications on policy violations and events from AppDynamics to Splunk so that a Splunk user can use those to launch deep dives in AppDynamics. See Getting Notifications From and Launching AppDynamics in Splunk.
++ Prerequisites
# These instructions assume that you are familiar with using both AppDynamics and Splunk.
# You have installed the AppDynamics App for Splunk from Splunkbase. A version of this document is included with the app.
# Splunk version 4.x or newer.
# AppDynamics version 3.5 or newer. If you do not already have a license, sign up for a [http://info.appdynamics.com/30-day-trial.html/ trial license]. You can choose either a SaaS solution or an On-Premise installation.
# You need the following AppDynamics Controller information to set up the integration: hostname/IP address, port number, account name, user name, and password. If you use a SaaS account, AppDynamics provides you with the information.
# Access to the [http://docs.appdynamics.com/ AppDynamics documentation]. When you trial or buy the product AppDynamics provides access credentials to you.
# Ensure that $SPLUNK_HOME is set to the directory where Splunk is installed.
++ Seeing Performance Data from AppDynamics in Splunk
+++ Configure metrics.conf to choose the metrics to be mined from AppDynamics
# Locate and edit the file: $SPLUNK_HOME/etc/apps/appdynamics/local/metrics.conf
# Add one section for each individual metric you want to mine from AppDynamics. You need the following:
 * AppDynamics metric name, to name the section in the metrics.conf file, and for use as as unique identifier in Splunk
 * REST URL of the metric from the AppDynamics Metric Browser, see the [http://docs.appdynamics.com/display/ADPRO/Use+the+AppDynamics+REST+API#UsetheAppDynamicsRESTAPI-ToCopytheRESTURLforaMetric/ AppDynamics REST documentation].
 * polling interval - how frequently, in minutes, Splunk will run the script to get this metric
 * username and password 
  * for On-Premise or SaaS multi-tenant, <username>@<account> and the password
  * for On-Premise or SaaS single-tenant, <username>@customer1 and the password

For example, if you want to mine a metric called AverageResponseTime for the ViewCart.sendItems business transaction, the entry would be similar to this:

<code>
  [ViewCart.sendItems_AverageResponseTime]
  url = http://<controller-host>:<port>/controller/rest/applications/
  Acme%20Online%20Book%20Store/metric-data?metricpath=Business%20Transaction%20Performance%7CBusiness%20Transactions%7CECommerce%7CViewCart.sendItems%7CAverage%20Response%20Time%20(ms)&time-range-type=BEFORE_NOW&duration-in-mins=15
  interval = 1
  username = user1@customer1
  password = welcome
</code>

+++ To see the metrics in Splunk
1. Launch the AppDynamics App in Splunk.
2. Enter index=appdynamics in the Search field of the AppDynamics App in Splunk.

 [[image:AppDMetricsOnSplunk.png]]

++ Viewing AppDynamics Notifications in Splunk
+++ Install splunkClient on the AppDynamics Controller host

<code>
Note: This feature is currently available for single-tenant Controllers only.
</code>
For AppDynamics SaaS customers:
* Contact AppDynamics Support and ask them to extract the splunkClient zip file on your behalf.
For AppDynamics On-Premise Controllers:
# Locate and copy the splunkClient zip file:
 * For Linux: $SPLUNK_HOME/etc/apps/appdynamics/splunkClient/splunkClient-3.6-linux.zip
 * For Windows:$SPLUNK_HOME/etc/apps/appdynamics/splunkClient/splunkClient-3.6-windows.zip
# Extract the splunkClient zip file to the Controller installation directory on the machine where the AppDynamics Controller is installed.
<code>
Note: The splunkClient zip file includes a custom.xml file containing notifications. If your Controller already has a custom.xml file, edit it and merge the contents.
</code>
+++ Set up the .splunkrc file
A sample .splunkrc file is part of the splunkClient zip file.
# Edit the .splunkrc file to add information that allows the Controller to communicate with Splunk. If you do not already have a .splunkrc file, edit the file <controller-home>/custom/conf/.splunkrc and change the properties to suit your Splunk installation.
<code>
   # Host at which Splunk is reachable (OPTIONAL)
   host=localhost
   # Port at which Splunk is reachable (OPTIONAL)
   # Use the admin port, which is 8089 by default.
   port=8089
   # Splunk username
   username=admin
   # Splunk password
   password=changeme
   # Access scheme (OPTIONAL)
   scheme=https
   # Namespace to use (OPTIONAL)
   namespace=*:*
</code>
# Copy the .splunkrc file to the platform home directory of the user that started the Controller. In Linux this would be the environment variable $HOME location and in Windows the environment variable %USER_PROFILE% location.
+++ Configure custom notifications and actions in AppDynamics
# Use the AppDynamics Controller UI to configure the custom actions notify-splunk-of-event and notify-splunk-of-policy-violation in the Global Notifications and Policy Notifications screens. Details are available in the [http://docs.appdynamics.com/display/PRO12S/Configure+Custom+Notifications#ConfigureCustomNotifications-AddingCustomNotificationsforEventsorPolicyViolations/ AppDynamics Alerts documentation for events and policies].
# Add the following field extraction section to your $SPLUNK_HOME/etc/apps/search/default/props.conf file:
<code>
  [source::http-simple]
  EXTRACT-AppD = url="http[s]*://(?<nurl>[^"]+)"
</code>
# Add the following workflow action to your $SPLUNK_HOME/etc/apps/search/default/workflow_actions.conf file:
<code>
  [LaunchAppD]
  display_location = both
  fields = url
  label = Launch in AppDynamics
  link.method = get
  link.target = blank
  link.uri = http://$!nurl$
  type = link
</code>

+++ See AppDynamics notifications in Splunk
To see the AppDynamics notifications, launch the Splunk Search App and choose the http-simple source.
 [[image:AppDNotificationsOnSplunk.png]]

+++ Launching AppDynamics From Splunk
On an event in the Splunk Search App, click the blue pulldown and choose Launch in AppDynamics. See the screenshot above.

++Learn More
[http://splunk-base.splunk.com/apps/ Splunkbase Apps]
[http://docs.appdynamics.com AppDynamics documentation]
[http://docs.splunk.com/Documentation/Splunk/ Splunk documentation]
